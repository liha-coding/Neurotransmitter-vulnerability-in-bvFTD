%% This function can be used to run MENGA to create img2don and gen2don files for further processing.
%% The original toolbox is available at https://github.com/FAIR-CNS/MENGA.

function MENGA_run_own(folderImage,genes,out_dir,roi,path_MENGA)

% ROI list
if strcmp(roi,'full')
    load(fullfile(path_MENGA, 'code_MENGA_31\code\UTILITY\LISTROI\listroistruct.mat'));
elseif strcmp(roi,'short')
    load(fullfile(path_MENGA, 'code_MENGA_31\code\UTILITY\LISTROI\listroifull.mat'));
end

% Mask
load(fullfile(path_MENGA,'GM_mask_MNI.mat'));

% Window size
windowsize = 3;

% Gene list
genelabel = loadgenefile(genes);

pwpath = fullfile(path_MENGA,'code_MENGA_31'); % folder with code, data etc.

genelabel = checkgenelist(genelabel,pwpath);

% mockfolder for img2don

mockfolder = fullfile(path_MENGA,'code_MENGA_31');

if ~isfolder(out_dir)
   mkdir(out_dir); 
end

%% DATA LOADING AND REMAPPING in ALLEN SPACE

%importing image to donor space
img2don = MappingImage2Donors(pwpath,folderImage,listroi,windowsize,mask); % from MENGA toolbox

%importing genomic data
gen2don = LoadGenomicData(pwpath,genelabel,listroi); % from MENGA toolbox

% nr image loaded = nr of rows in expression matrix in any donor
nrimg = size(img2don(1).exp,1);
img2don_full = img2don;

for j = 1:nrimg
    
    disp(j);
    
    img2don = reduceImg2don(img2don_full,j); % from MENGA toolbox
    image_name = img2don(1).info.image_name{j}; % name of the image is present in any donor
    
    %% SAVE RESULTS
    % SAVE in folderImage, creating a folder
    fileResults = ['RESULTS_',char(image_name(1:end-4))]; % need to eliminate the extension
    folderResults = fullfile(out_dir,fileResults);
    mkdir(folderResults);
    
    % SAVE mat
    filename = fullfile(folderResults,[fileResults,'.mat']);
    save(filename,'gen2don','img2don','genelabel','listroi','namelistroi','mask','windowsize')
    
end

end
